#! /bin/bash

declare -a services=("DVA" "INV/inventory" "USR/account" "BKS/backstage" "PUR/purchase")
declare -a serv_names=("DVA" "INV" "USR" "BKS" "PUR")
declare -a add_options=("" "" "" "export JAVA_OPTS='-Xms1024M -Xmx3072M -XX:MaxPermSize=1024M'" "export JAVA_OPTS='-Xms1024M -Xmx3072M -XX:MaxPermSize=1024M'" )
declare -a script_names=("./diva" "./dev" "./dev" "./dev" "./dev")
declare -a ports=("6666" "8083" "" "" "")

current_dir="$(pwd)"
starter_prefix="tfly_starter_"

# Determine a "root" directory
this_source="${BASH_SOURCE[0]}"
while [ -h "${this_source}" ]; do # resolve $this_source until the file is no longer a symlink
  root_dir="$( cd -P "$( dirname "${this_source}" )" && pwd )"
  this_source="$(readlink "${this_source}")"
  [[ ${this_source} != /* ]] && this_source="$DIR/${this_source}" # if ${this_source} was a relative symlink, we need to resolve it relative to the path where the symlink file was located
done
root_dir="$( cd -P "$( dirname "${this_source}" )" && pwd )"
root_dir=$( echo ${root_dir} | sed 's/\(.*\)\/\(.*\)/\1/' ) # remove a last part of the path ("/tfly_starter")
cd ${root_dir}

cur_user=$(whoami)
home_dir="/home/${cur_user}"
gvm_settings_path="${home_dir}/.gvm/bin/gvm-init.sh"

num_of_servs=${#services[*]}
indx=0
while [[ $indx -lt $num_of_servs ]]; do

    service="${services[${indx}]}"
    srv_name="${serv_names[${indx}]}"
    script_name="${script_names[${indx}]}"
    add_opts="${add_options[${indx}]}"
    port="${ports[${indx}]}"

    read -p "try to start ${srv_name}? (y/n) " -n 1 -s is_continue
    echo
    case "${is_continue}" in
        'y' | 'Y' )
            if [ ${srv_name} == "DVA" ]; then
                echo -n 'Please start DVA manually '
            else
                echo -n 'Service starts. Please wait '
            fi
	    
            grails_version="DEFAULT"
            app_props_filename="${root_dir}/${service}/application.properties"
            if [ -s ${app_props_filename} ]; then
	            while read line; do
		            gr_vers=$(echo ${line} | sed -n '/grails.version.*/p' | cut --delimiter='=' --fields=2)
		            [[ -n "${gr_vers}" ]] && grails_version=$gr_vers
	            done < "${root_dir}/${service}/application.properties"
            fi

	    starter_filename="${root_dir}/${starter_prefix}${srv_name}"
            log_filename="${root_dir}/${srv_name}.log"
	    serv_dir="${root_dir}/${service}"
	    echo "#! /bin/bash" > "${starter_filename}"
	    echo "cd ${serv_dir}" >> "${starter_filename}"
	    echo "${add_opts}" >> "${starter_filename}"
            if [ ${grails_version} != "DEFAULT" ]; then
	            echo "[[ -s \"${gvm_settings_path}\" ]] && source \"${gvm_settings_path}\" " >> "${starter_filename}"
	            echo "gvm use grails ${grails_version}" >> "${starter_filename}"
            fi
	    echo "${script_name} | tee -a ${log_filename}" >> "${starter_filename}"

	    chmod 777 "${starter_filename}"
            echo "" > "${log_filename}"
	    xterm -e "${starter_filename}" &
		 
            until grep -i "server running" "${log_filename}" >/dev/null 2>&1; do
                echo -n '.' 
                sleep 3
	    done
            echo -e "\n${srv_name} successfully launched\n"

	    indx=`expr ${indx} + 1`

            ;;
        'n' | 'N' )
            break
            ;;
        * ) echo "Please enter 'y[es]' or 'n[o]'" 
    esac
    
done

echo 'If you want to restart some services those working at the moment:'
echo '1. Stop it'
echo "2. Run script \"${root_dir}/${starter_prefix}<name of service>\", where <name of service> is \"USR\", \"INV\" etc."
echo 'Bye!'
cd "${current_dir}"
exit 0 

